@model IEnumerable<task_final.ViewModels.ShoppingListProductViewModel>
@{
	ViewData["Title"] = "ShoppingListDetails";
}
<div>
	<a asp-action="ShoppingProductAdd" asp-route-id="@ViewData["ShoppingListID"]">Add Product</a>
</div>
@if (Model.Count() == 0) {
	<partial name="_EmptyList" />
} else {
	<h1>@ViewData["Title"]</h1>
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.ShoppingProductID)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.ShoppingProductStatus)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.ProductID)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.ProductName)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.ShoppingProductQuantity)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.ShoppingProductTotalPrice)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model) {
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.ShoppingProductID)
					</td>
					<td>
						<partial name="_ShoppingProductStatusViewModel" model='new ShoppingProductStatusViewModel { ShoppingProudctID = item.ShoppingProductID, StatusName = item.ShoppingProductStatus, Statuses = item.ShoppingProductStatuses}' />
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.ProductID)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.ProductName)
					</td>
					<td>
						<partial name="_ShoppingProductQuantityViewModel" model='new ShoppingProductQuantityViewModel { ShoppingProudctID = item.ShoppingProductID, Quantity = item.ShoppingProductQuantity}' />
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.ShoppingProductTotalPrice)
					</td>
					<td>
						<a asp-action="ShoppingProductDelete" asp-route-id="@item.ShoppingProductID">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
}